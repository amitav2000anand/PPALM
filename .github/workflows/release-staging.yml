name: Staging Release Action

on:
  workflow_dispatch:
    inputs:
      solution_name:
        description: 'The solution name.'
        type: string
        default: SelfServiceAgentGenAI
      solution_shipping_folder:
        description: 'Folder for staging the exported solution *do not change*'
        type: string
        default: out/ship
      solution_outbound_folder:
        description: 'Folder for unpacking solutions *do not change*'
        type: string
        default: out/solutions/
      solution_source_folder:
        description: 'Source folder for solutions *do not change*'
        type: string
        default: solutions/
      solution_release_folder:
        description: 'Folder for hosting release binaries *do not change*'
        type: string
        default: out/release

env:
  BUILD_ENVIRONMENT_URL: ${{ secrets.BUILD_ENVIRONMENT_URL }}
  PROD_ENVIRONMENT_URL: ${{ secrets.PRODUCTION_ENVIRONMENT_URL }}
  CLIENT_ID: ${{ secrets.POWERPLATFORM_CLIENT_ID }}
  TENANT_ID: ${{ secrets.POWERPLATFORM_TENANT_ID }}
  SECRET: ${{ secrets.POWERPLATFORMSPN }}

permissions:
  contents: write

jobs:
  convert-to-managed:
    runs-on: ubuntu-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - name: Install Power Platform Tools
      uses: microsoft/powerplatform-actions/actions-install@v1

    - uses: actions/checkout@v3
      with:
        lfs: true

    - name: Verifies the service connection by connecting to the service
      uses: microsoft/powerplatform-actions/who-am-i@v1
      with:
        environment-url: ${{ env.BUILD_ENVIRONMENT_URL }}
        app-id: ${{ env.CLIENT_ID }}
        client-secret: ${{ env.SECRET }}
        tenant-id: ${{ env.TENANT_ID }}

    - name: Pack solution from the source control
      uses: microsoft/powerplatform-actions/pack-solution@v1
      with:
        solution-folder: ${{ inputs.solution_source_folder}}/${{ inputs.solution_name }}
        solution-file: ${{ inputs.solution_outbound_folder}}/${{ inputs.solution_name }}.zip
        solution-type: Unmanaged

    - name: Import solution as unmanaged to build environment
      uses: microsoft/powerplatform-actions/import-solution@v1
      with:
        environment-url: ${{ env.BUILD_ENVIRONMENT_URL }}
        app-id: ${{ env.CLIENT_ID }}
        client-secret: ${{ env.SECRET }}
        tenant-id: ${{ env.TENANT_ID }}
        solution-file: ${{ inputs.solution_outbound_folder}}/${{ inputs.solution_name }}.zip
        force-overwrite: true
        publish-changes: true

    - name: Export solution as managed
      uses: microsoft/powerplatform-actions/export-solution@v1
      with:
        environment-url: ${{ env.BUILD_ENVIRONMENT_URL }}
        app-id: ${{ env.CLIENT_ID }}
        client-secret: ${{ env.SECRET }}
        tenant-id: ${{ env.TENANT_ID }}
        solution-name: ${{ inputs.solution_name }}
        managed: true
        solution-output-file: ${{ inputs.solution_shipping_folder}}/${{ inputs.solution_name }}_managed.zip

    - name: Verify file exists before upload
      run: |
        if [ -f "${{ inputs.solution_shipping_folder}}/${{ inputs.solution_name }}_managed.zip" ]; then
          echo "File exists!";
        else
          echo "File does not exist!"; exit 1;
        fi

    - name: Upload the ready to ship solution to GH artifact store
      uses: actions/upload-pages-artifact@v3
      with:
        name: ${{ inputs.solution_name }}_managed
        path: ${{ inputs.solution_shipping_folder}}/

  release-to-staging:
      needs: [ convert-to-managed ]
      runs-on: windows-latest
      env:
        RUNNER_DEBUG: 1

      steps:
      - name: Install Power Platform Tools
        uses: microsoft/powerplatform-actions/actions-install@v1

      - uses: actions/checkout@v3
        with:
          lfs: true

      - name: Fetch the ready to ship solution from GH artifact store
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.solution_name }}_managed
          path: ${{ inputs.solution_release_folder}}/

      - name: List files in the release folder
        run: dir ${{ inputs.solution_release_folder }}

      - name: Debug solution name
        run: 'echo "##[debug]Solution Name: ${{ inputs.solution_release_folder}}/${{ inputs.solution_name }}_managed.zip"'

      - name: Import solution to build environment as managed
        uses: microsoft/powerplatform-actions/import-solution@v1
        with:
          environment-url: ${{ env.BUILD_ENVIRONMENT_URL }}
          app-id: ${{ env.CLIENT_ID }}
          client-secret: ${{ env.SECRET }}
          tenant-id: ${{ env.TENANT_ID }}
          solution-file: ${{ inputs.solution_release_folder}}/${{ inputs.solution_name }}_managed.zip
          force-overwrite: true
          publish-changes: true
