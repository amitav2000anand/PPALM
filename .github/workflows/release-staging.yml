
name: Staging Release Action
# Call the reusable workflow release-solution-with-inputs.yml
# Release your solution to prod when you create a new release.

on:
  workflow_dispatch:
    inputs:
          #Do Not change these values
          #Values are set by the caller
          #caller sample: release-action-call.ymnl
          solution_name:
            description: 'The solution name.'
            type: string
            default: SelfServiceAgent
          solution_shipping_folder:
            description: 'folder name for staging the exported solution *do not change*'
            type: string
            default: out/ship/
          solution_outbound_folder:
            description: 'staging the unpacked solution folder before check-in *do not change*'
            type: string
            default: out/solutions/
          solution_source_folder:
            description: 'folder name to be created and checked in *do not change*'
            type: string
            default: solutions/
          solution_release_folder:
            description: 'folder where the released binaries are going to be hosted *do not change*'
            type: string
            default: out/release

env:
  BUILD_ENVIRONMENT_URL: ${{ secrets.BUILD_ENVIRONMENT_URL }}
  PROD_ENVIRONMENT_URL: ${{ secrets.PRODUCTION_ENVIRONMENT_URL }}
  CLIENT_ID: ${{ secrets.POWERPLATFORM_CLIENT_ID }}
  TENANT_ID: ${{ secrets.POWERPLATFORM_TENANT_ID }}
  SECRET: ${{ secrets.POWERPLATFORMSPN }}

permissions:
  contents: write

jobs:
  convert-to-managed:
    runs-on: windows-latest
    # or you can say runs-on: ubuntu-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - name: Install Power Platform Tools
      uses: microsoft/powerplatform-actions/actions-install@v1

    - uses: actions/checkout@v3
      with:
        lfs: true

    - name: Verifies the service connection by connecting to the service and sending a WhoAmI
      uses: microsoft/powerplatform-actions/who-am-i@v1
      with:
        environment-url: ${{ env.BUILD_ENVIRONMENT_URL }}
        app-id: ${{ env.CLIENT_ID }}
        client-secret: ${{ env.SECRET }}
        tenant-id: ${{ env.TENANT_ID }}

    - name: Pack solution from the source control
      uses: microsoft/powerplatform-actions/pack-solution@v1
      with:
        solution-folder: ${{ inputs.solution_source_folder}}/${{ inputs.solution_name }}
        solution-file: ${{ inputs.solution_outbound_folder}}/${{ inputs.solution_name }}.zip
        solution-type: Unmanaged

    - name: Import solution as unmanaged to build environment
      uses: microsoft/powerplatform-actions/import-solution@v1
      with:
        environment-url: ${{ env.BUILD_ENVIRONMENT_URL }}
        app-id: ${{ env.CLIENT_ID }}
        client-secret: ${{ env.SECRET }}
        tenant-id: ${{ env.TENANT_ID }}
        solution-file: ${{ inputs.solution_outbound_folder}}/${{ inputs.solution_name }}.zip
        force-overwrite: true
        publish-changes: true

    - name: Export solution as managed
      uses: microsoft/powerplatform-actions/export-solution@v1
      with:
        environment-url: ${{ env.BUILD_ENVIRONMENT_URL }}
        app-id: ${{ env.CLIENT_ID }}
        client-secret: ${{ env.SECRET }}
        tenant-id: ${{ env.TENANT_ID }}
        solution-name: ${{ inputs.solution_name }}
        managed: true
        solution-output-file: ${{ inputs.solution_shipping_folder}}/${{ inputs.solution_name }}_managed.zip

    - name: Upload the ready to ship solution to GH artifact store
      uses: actions/upload-pages-artifact@v3
      with:
        name: ${{ inputs.solution_name }}_managed.zip
        path: ${{ inputs.solution_shipping_folder}}/

  release-to-staging:
      needs: [ convert-to-managed ]
      runs-on: windows-latest
      env:
        RUNNER_DEBUG: 1

      steps:
      - name: Install Power Platform Tools
        uses: microsoft/powerplatform-actions/actions-install@v1

      - uses: actions/checkout@v3
        with:
          lfs: true

      - name: Fetch the ready to ship solution from GH artifact store
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.solution_name }}_managed.zip
          path: ${{ inputs.solution_release_folder}}/

      - name: Debug solution name
        run: 'echo "##[debug]Solution Name: ${{ inputs.solution_release_folder}}/${{ inputs.solution_name }}_managed.zip"'

      - name: Import solution to prod env
        uses: microsoft/powerplatform-actions/import-solution@v1
        with:
          environment-url: 'https://orga378c90d.crm.dynamics.com'
          app-id: ${{ env.CLIENT_ID }}
          client-secret: ${{ env.SECRET }}
          tenant-id: ${{ env.TENANT_ID }}
          solution-file: ${{ inputs.solution_release_folder}}/${{ inputs.solution_name }}_managed.zip
          force-overwrite: true
          publish-changes: true
