name: release-solution-to-prod

# convert solution to managed (using a build PowerPlatform environment for the conversion)
# upload the solution to the GitHub artifacts
on:
  workflow_dispatch:
    inputs:
      solution_name:
        description: 'The solution name.'
        type: string
        default: SelfServiceAgent
      solution_shipping_folder:
        description: 'Folder for staging the exported solution *do not change*'
        type: string
        default: out/ship
      solution_outbound_folder:
        description: 'Folder for unpacking solutions *do not change*'
        type: string
        default: out/solutions/
      solution_source_folder:
        description: 'Source folder for solutions *do not change*'
        type: string
        default: solutions/
      solution_release_folder:
        description: 'Folder for hosting release binaries *do not change*'
        type: string
        default: out/release

env:
  DEV_ENVIRONMENT_URL : ${{ secrets.ENVIRONMENT_URL }}
  BUILD_ENVIRONMENT_URL: ${{ secrets.BUILD_ENVIRONMENT_URL }}
  PROD_ENVIRONMENT_URL: ${{ secrets.PRODUCTION_ENVIRONMENT_URL }}
  CLIENT_ID: ${{ secrets.POWERPLATFORM_CLIENT_ID }}
  TENANT_ID: ${{ secrets.POWERPLATFORM_TENANT_ID }}
  SECRET: ${{ secrets.POWERPLATFORMSPN }}

jobs:
   release-to-staging:
     runs-on: windows-latest
     env:
       RUNNER_DEBUG: 1

     steps:
     - name: Install Power Platform Tools
       uses: microsoft/powerplatform-actions/actions-install@v1
   
     - uses: actions/checkout@v3
       with:
         lfs: true

     - name: Fetch the ready to ship solution from GH artifact store
       uses: actions/download-artifact@v4
       with:
         name: ${{ inputs.solution_name }}_managed
         path: ${{ inputs.solution_release_folder}}/

     - name: Debug solution name
       run: 'echo "##[debug]Solution Name: ${{ inputs.solution_release_folder}}/${{ inputs.solution_name }}_managed.zip"'
        
     - name: Import solution to prod env
       uses: microsoft/powerplatform-actions/import-solution@v1
       with:
         environment-url: ${{ env.PROD_ENVIRONMENT_URL }}
         app-id: ${{ env.CLIENT_ID }}
         client-secret: ${{ env.SECRET }}
         tenant-id: ${{ env.TENANT_ID }}
         solution-file: ${{ inputs.solution_release_folder}}/${{ inputs.solution_name }}_managed.zip
         force-overwrite: true
         publish-changes: true
