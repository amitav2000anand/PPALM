name: release-solution-to-prod-reusable
# Reusable workflow
# convert solution to managed (using a build PowerPlatform environment for the conversion)
# upload the solution to the GitHub artifacts and deploy to the PROD environment
on:
  workflow_dispatch:
    inputs: 
      #Do Not change these values
      #Values are set by the caller
      #caller sample: release-action-call.ymnl
      solution_name:
        description: 'The solution name.'
        type: string
        default: SelfServiceAgent       
      solution_shipping_folder:
        description: 'folder name for staging the exported solution *do not change*'        
        type: string
        default: out/ship
      solution_outbound_folder:
        description: 'staging the unpacked solution folder before check-in *do not change*'
        type: string
        default: out/solutions/
      solution_source_folder: 
       description: 'folder name to be created and checked in *do not change*'
       type: string
       default: solutions/
      solution_release_folder:
       description: 'folder where the released binaries are going to be hosted *do not change*'
       type: string
       default: out/release
      BUILD_ENVIRONMENT_URL:
        description: 'Build environment url.'
        type: string
        required: true
        default: 'https://orga378c90d.crm.dynamics.com'
      PRODUCTION_ENVIRONMENT_URL: 
        description: 'Production environment url.'
        type: string
        required: true
        default: 'https://orgc5739d51.crm.dynamics.com'
      CLIENT_ID: 
        description: 'The client id'
        type: string
        required: true
        default: '40d1484d-fca4-41b1-adf2-22aa1347977f'
      TENANT_ID: 
        description: 'The tenant id'
        type: string
        required: true
        default: '582af8b1-0ad0-4519-bae9-067c35c065c2'
#    secrets:
#      envSecret:
#        description: 'The secret value for authentication using SPN'
#        required: true

jobs:
  convert-to-managed:
    runs-on: windows-latest
    # or you can say runs-on: ubuntu-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - name: Install Power Platform Tools
      uses: microsoft/powerplatform-actions/actions-install@v1
      
    - uses: actions/checkout@v3
      with:
        lfs: true

    - name: who-am-i action
      uses: microsoft/powerplatform-actions/who-am-i@v1
      with:
        environment-url: 'https://orgd3fd9a0e.crm.dynamics.com'
        app-id: '40d1484d-fca4-41b1-adf2-22aa1347977f'
        client-secret: 'fM28Q~-vgi8XyyPnnJkwlOJISagNJalEtrvrFckl'
        tenant-id: '582af8b1-0ad0-4519-bae9-067c35c065c2'
              
    - name: Pack solution
      uses: microsoft/powerplatform-actions/pack-solution@v1
      with:
        solution-folder: ${{ inputs.solution_source_folder}}/${{ inputs.solution_name }}
        solution-file: ${{ inputs.solution_outbound_folder}}/${{ inputs.solution_name }}_managed.zip
        solution-type: Managed

    - name: Import solution as managed to uat env
      uses: microsoft/powerplatform-actions/import-solution@v1
      with:
        environment-url: 'https://orga378c90d.crm.dynamics.com'
        app-id: '40d1484d-fca4-41b1-adf2-22aa1347977f'
        client-secret: 'fM28Q~-vgi8XyyPnnJkwlOJISagNJalEtrvrFckl'
        tenant-id: '582af8b1-0ad0-4519-bae9-067c35c065c2'
        solution-file: ${{ inputs.solution_outbound_folder}}/${{ inputs.solution_name }}_managed.zip
        force-overwrite: true
        publish-changes: true

    # - name: Export solution as managed
    #   uses: microsoft/powerplatform-actions/export-solution@v1
    #   with:
    #     environment-url: 'https://orga378c90d.crm.dynamics.com'
    #     app-id: '40d1484d-fca4-41b1-adf2-22aa1347977f'
    #     client-secret: 'fM28Q~-vgi8XyyPnnJkwlOJISagNJalEtrvrFckl'
    #     tenant-id: '582af8b1-0ad0-4519-bae9-067c35c065c2'
    #     solution-name: ${{ inputs.solution_name }}
    #     managed: true
    #     solution-output-file: ${{ inputs.solution_shipping_folder}}/${{ inputs.solution_name }}_managed.zip

    # - name: Import solution to prod env
    #   uses: microsoft/powerplatform-actions/import-solution@v1
    #   with:
    #     environment-url: 'https://orgc5739d51.crm.dynamics.com'
    #     app-id: '40d1484d-fca4-41b1-adf2-22aa1347977f'
    #     client-secret: 'fM28Q~-vgi8XyyPnnJkwlOJISagNJalEtrvrFckl'
    #     tenant-id: '582af8b1-0ad0-4519-bae9-067c35c065c2'
    #     solution-file: ${{ inputs.solution_shipping_folder}}/${{ inputs.solution_name }}_managed.zip
    #     force-overwrite: true
    #     publish-changes: true

    - name: Debug solution name
      run: 'echo "##[debug]Solution Name: ${{ inputs.solution_shipping_folder}}/${{ inputs.solution_name }}_managed.zip"'

    - name: Upload the ready to ship solution to GH artifact store
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.solution_name }}_managed.zip
        path: ${{ inputs.solution_shipping_folder}}

  release-to-staging:
    needs: [ convert-to-managed ]
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - name: Install Power Platform Tools
      uses: microsoft/powerplatform-actions/actions-install@v1
    
    - uses: actions/checkout@v3
      with:
        lfs: true

    - name: Fetch the ready to ship solution from GH artifact store
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.solution_name }}_managed.zip
        path: ${{ inputs.solution_shipping_folder}}

    - name: Debug solution name
      run: 'echo "##[debug]Solution Name: ${{ inputs.solution_shipping_folder}}/${{ inputs.solution_name }}_managed.zip"'
        
    - name: Import solution to prod env
      uses: microsoft/powerplatform-actions/import-solution@v1
      with:
        environment-url: 'https://orga378c90d.crm.dynamics.com'
        app-id: '40d1484d-fca4-41b1-adf2-22aa1347977f'
        client-secret: 'fM28Q~-vgi8XyyPnnJkwlOJISagNJalEtrvrFckl'
        tenant-id: '582af8b1-0ad0-4519-bae9-067c35c065c2'
        solution-file: ${{ inputs.solution_outbound_folder}}/${{ inputs.solution_name }}_managed.zip
        force-overwrite: true
        publish-changes: true
