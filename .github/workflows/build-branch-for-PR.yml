name: export-and-branch-solution-updated
# Export solution from DEV environment
# unpack it and prepare, commit and push a git branch with the changes

on:
  workflow_dispatch:
    inputs:
      # Change this value
      solution_name:
        description: 'name of the solution to worked on from Power Platform'
        required: true
        default: SelfServiceAgent
      #Do Not change these values
      solution_exported_folder:
        description: 'folder name for staging the exported solution *do not change*'
        required: true
        default: out/exported/
      solution_folder:
        description: 'staging the unpacked solution folder before check-in *do not change*'
        required: true
        default: out/solutions/
      unmanaged_solution_target_folder: 
       description: 'folder name to be created and checked in *do not change*'
       required: true
       default: unmanagedsolutions/
      managed_solution_target_folder: 
       description: 'folder name to be created and checked in *do not change*'
       required: true
       default: managedsolutions/

env:
#edit your values here
  ENVIRONMENT_URL: ${{ secrets.ENVIRONMENT_URL }}
  CLIENT_ID: ${{ secrets.POWERPLATFORM_CLIENT_ID }}
  TENANT_ID: ${{ secrets.POWERPLATFORM_TENANT_ID }}
permissions:
  contents: write

jobs:
  checkin-to-repo-from-dev:
    runs-on: windows-latest
    # or you can say runs-on: ubuntu-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - name: Install Power Platform Tools
      uses: microsoft/powerplatform-actions/actions-install@v1
      
    - uses: actions/checkout@v3
      with:
        lfs: true

    - name: who-am-i action
      uses: microsoft/powerplatform-actions/who-am-i@v1
      with:
        environment-url: ${{env.ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.POWERPLATFORMSPN }}
        tenant-id: ${{env.TENANT_ID}}

    - name: generate-configuration-settings-file
        pac solution create-settings --solution-zip ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}_managed.zip --settings-file deployment-settings.json

    - name: export-solution action for unmanaged solution
      uses: microsoft/powerplatform-actions/export-solution@v1
      with:
        environment-url: ${{env.ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.POWERPLATFORMSPN }}
        tenant-id: ${{env.TENANT_ID}}
        # managed: true
        solution-name: ${{ github.event.inputs.solution_name }}
        # solution-output-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}_managed.zip
        solution-output-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}.zip

    - name: unpack-solution action for unmanaged solution
      uses: microsoft/powerplatform-actions/unpack-solution@v1
      with:
        # solution-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}_managed.zip
        solution-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}.zip
        solution-folder: ${{ github.event.inputs.solution_folder}}/${{ github.event.inputs.solution_name }}
        # solution-type: 'Managed'
        overwrite-files: true

    - name: branch-solution for managed, prepare it for a PullRequest
      uses: microsoft/powerplatform-actions/branch-solution@v1
      with:
        solution-folder: ${{ github.event.inputs.solution_folder}}/${{ github.event.inputs.solution_name }}
        solution-target-folder: ${{ github.event.inputs.managed_solution_target_folder}}/${{ github.event.inputs.solution_name }}
        repo-token: ${{ secrets.GH_PAT }}
        allow-empty-commit: true
